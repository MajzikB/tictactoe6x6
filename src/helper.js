export function calculateWinner(squares) {
  const lines = [
  
  // Első sor vízszintes
    [0, 1, 2],
    [1, 2, 3],
    [2, 3, 4],
    [3, 4, 5],
  // Második sor vízszintes
    [6, 7, 8],
    [7, 8, 9],
    [8, 9, 10],
    [9, 10, 11],
  // Harmadik sor vízszintes
    [12, 13, 14],
    [13, 14, 15],
    [14, 15, 16],
    [15, 16, 17],
  // Negyedik sor vízszintes
    [18, 19, 20],
    [19, 20, 21],
    [20, 21, 22],
    [21, 22, 23],  
  // Ötödik sor vízszintes
    [24, 25, 26],
    [25, 26, 27],
    [26, 27, 28],
    [27, 28, 29],  
  // Hatodik sor vízszintes
    [30, 31, 32],
    [31, 32, 33],
    [32, 33, 34],
    [33, 34, 35], 


  // Első sor függőleges
    [0, 6, 12],
    [1, 7, 13],
    [2, 8, 14],
    [3, 9, 15],
    [4, 10, 16],
    [5, 11, 17],
  // Második sor függőleges
    [6, 12, 18],
    [7, 13, 19],
    [8, 14, 20],
    [9, 15, 21],
    [10, 16, 22],
    [11, 17, 23],
  // Harmadik sor függőleges
    [12, 18, 24],
    [13, 19, 25],
    [14, 20, 26],
    [15, 21, 27],
    [16, 22, 28],
    [17, 23, 29],
  // Negyedik sor függőleges
    [18, 24, 30],
    [19, 25, 31],
    [20, 26, 32],
    [21, 27, 33],
    [22, 28, 34],
    [23, 29, 35],


  // Első sor átló
    [0, 7, 14],
    [1, 8, 15],
    [2, 9, 16],
    [2, 7, 12],
    [3, 10, 17],
    [3, 8, 13],
    [4, 9, 14],
    [5, 10, 15],
  // Második sor átló
    [6, 13, 20],
    [7, 14, 21],
    [8, 15, 22],
    [8, 13, 18],
    [9, 16, 23],
    [9, 14, 19],
    [10, 15, 20],
    [11, 16, 21],
  // Harmadik sor átló
    [12, 19, 16],
    [13, 20, 27],
    [14, 19, 24],
    [14, 21, 28],
    [15, 20, 25],
    [15, 22, 29],
    [16, 21, 26],
    [17, 22, 27],
  // Negyedik sor átló
    [18, 25, 32],
    [19, 26, 33],
    [20, 27, 34],
    [20, 25, 30],
    [21, 26, 31],
    [21, 28, 35],
    [22, 27, 32],
    [23, 28, 33],
  ];
  for (let i = 0; i < lines.length; i++) {
    const [a, b, c] = lines[i];
    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {
      return squares[a];
    }
  }
  return null;
}